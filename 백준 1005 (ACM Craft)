import sys
from collections import deque

T = int(sys.stdin.readline())
for i in range(T):
    N, K = map(int, sys.stdin.readline().split())
    time = list(map(int, sys.stdin.readline().split()))
    weight = [[] for j in range(N+1)]
    inDegree = [0 for i in range(N+1)]
    for j in range(K):
        X, Y = map(int, sys.stdin.readline().split())
        weight[X].append(Y)
        inDegree[Y] += 1
    W = int(sys.stdin.readline())

    queue = deque([])
    for i in range(1, N+1):
        if inDegree[i] == 0:
            queue.append(i)

    totalTime = [0 for i in range(N+1)]

    while True:
        if len(queue) == 0:
            break

        x = queue.popleft()
        totalTime[x] += time[x-1]
        for i in weight[x]:
            inDegree[i] -= 1
            if totalTime[x] > totalTime[i]:     # 특정 정점으로 가는 간선들 중
                totalTime[i] = totalTime[x]     # 가장 오래 걸리는 시간을 맞춰 가야한다.
            if inDegree[i] == 0:
                queue.append(i)

    print(totalTime[W])
